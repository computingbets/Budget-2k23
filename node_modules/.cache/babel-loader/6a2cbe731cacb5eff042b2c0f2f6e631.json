{"ast":null,"code":"// import React from \"react\";\n// import \"./ExpenseForm.css\";\n// import { useState } from 'react';\n// const ExpenseForm = (props) => {\n//     const [newName, changeName] = useState('');\n//     const [newPrice, modPrice] = useState('');\n//     const [newDate, alterDate] = useState('');\n//     //these functs are handlers that get passed the onChange event and fire the stateFunct\n//     const nameChangeHandler = (event) => {\n//         //state funct grabs user input and loads the new State in the state variable\n//         changeName(event.target.value);\n//     };\n//     const priceHandler = (event) => {\n//         modPrice(event.target.value)\n//     };\n//     const dateHandler = (event) => {\n//         alterDate(event.target.value);\n//     }\n//     const subHandler = (event) =>{\n//       event.preventDefault();\n//       //store state vars, after handler from either price, date, or title fires, in obj\n//       const formData = {\n//         title: newName,\n//         amount: newPrice,\n//         date: new Date(newDate)\n//       };\n//       //passing data up through props, going to ExpenseItem\n//       props.onSaveExpense(formData);\n//       //clears form\n//       changeName('');\n//       modPrice('');\n//       alterDate('');\n//     };\n//   const landingHandler = () =>{\n//     let addState = 2; \n//    {addState % 2 === 0 && <form onSubmit={subHandler}>\n//    <div className=\"new-expense__controls\">\n//      <div className=\"new-expense__control\">\n//        <label>Title</label>\n//        <input type=\"text\" value={newName} onChange={nameChangeHandler} />\n//      </div>\n//      <div className=\"new-expense__control\">\n//        <label>Amount</label>\n//        <input type=\"number\" value={newPrice} min=\"0.00\" step=\"0.50\" onChange={priceHandler} />\n//      </div>\n//      <label>Date</label>\n//      <input type=\"date\" value={newDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateHandler} />\n//    </div>\n//    <div className=\"new-expense__actions\">\n//      <button type=\"submit\">Add Expense</button>\n//    </div>\n//   </form>\n//   {addState + 1}\n// }  \n// //attempted to make a counter, handlers, jsx to conditionally show data per Max's assignment. Proceeding w solution.\n// { addState % 2 != 0 && \n//   <div className=\"expense_landing\">\n//     <button className=\"expense_button\" onClick={landingHandler}>Add Expense</button>\n//   </div>\n//   {addState + 1}\n//  }\n// };\n// }\n// export default ExpenseForm;","map":{"version":3,"names":[],"sources":["C:/Users/stale/Documents/GitHub/1st React App 2/src/components/AddExpense/ExpenseForm.js"],"sourcesContent":["// import React from \"react\";\r\n// import \"./ExpenseForm.css\";\r\n// import { useState } from 'react';\r\n\r\n// const ExpenseForm = (props) => {\r\n//     const [newName, changeName] = useState('');\r\n//     const [newPrice, modPrice] = useState('');\r\n//     const [newDate, alterDate] = useState('');\r\n\r\n\r\n//     //these functs are handlers that get passed the onChange event and fire the stateFunct\r\n//     const nameChangeHandler = (event) => {\r\n//         //state funct grabs user input and loads the new State in the state variable\r\n//         changeName(event.target.value);\r\n//     };\r\n//     const priceHandler = (event) => {\r\n//         modPrice(event.target.value)\r\n//     };\r\n\r\n//     const dateHandler = (event) => {\r\n//         alterDate(event.target.value);\r\n//     }\r\n\r\n//     const subHandler = (event) =>{\r\n//       event.preventDefault();\r\n      \r\n//       //store state vars, after handler from either price, date, or title fires, in obj\r\n//       const formData = {\r\n//         title: newName,\r\n//         amount: newPrice,\r\n//         date: new Date(newDate)\r\n//       };\r\n\r\n//       //passing data up through props, going to ExpenseItem\r\n//       props.onSaveExpense(formData);\r\n    \r\n//       //clears form\r\n//       changeName('');\r\n//       modPrice('');\r\n//       alterDate('');\r\n//     };\r\n\r\n//   const landingHandler = () =>{\r\n//     let addState = 2; \r\n//    {addState % 2 === 0 && <form onSubmit={subHandler}>\r\n//    <div className=\"new-expense__controls\">\r\n//      <div className=\"new-expense__control\">\r\n//        <label>Title</label>\r\n//        <input type=\"text\" value={newName} onChange={nameChangeHandler} />\r\n//      </div>\r\n//      <div className=\"new-expense__control\">\r\n//        <label>Amount</label>\r\n//        <input type=\"number\" value={newPrice} min=\"0.00\" step=\"0.50\" onChange={priceHandler} />\r\n//      </div>\r\n//      <label>Date</label>\r\n//      <input type=\"date\" value={newDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateHandler} />\r\n//    </div>\r\n//    <div className=\"new-expense__actions\">\r\n//      <button type=\"submit\">Add Expense</button>\r\n//    </div>\r\n//   </form>\r\n//   {addState + 1}\r\n// }  \r\n// //attempted to make a counter, handlers, jsx to conditionally show data per Max's assignment. Proceeding w solution.\r\n// { addState % 2 != 0 && \r\n//   <div className=\"expense_landing\">\r\n//     <button className=\"expense_button\" onClick={landingHandler}>Add Expense</button>\r\n//   </div>\r\n//   {addState + 1}\r\n//  }\r\n\r\n// };\r\n// }\r\n\r\n// export default ExpenseForm;\r\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module"}