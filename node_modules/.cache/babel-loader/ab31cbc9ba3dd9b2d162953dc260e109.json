{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stale\\\\Documents\\\\GitHub\\\\1st React App 2\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from '../UI/Card';\nimport \"./ExpensePrice.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = function (props) {\n  _s();\n\n  const [year, changeYear] = useState();\n\n  const yearHandler = dataYear => {\n    changeYear(dataYear);\n    console.log(\"datayear \" + dataYear);\n    console.log(year + \" JS\");\n  };\n\n  const showExpenses = props.items.filter(expense => {\n    console.log(\"hello\");\n    return expense.date.getFullYear().toString() === year;\n  });\n\n  const expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 29\n  }, this); //     {/* map function has array input, prev props.items, now yearFilter */}\n  // {/* outputs keyed Component w dynamic data from App.js */}\n  // {/* showExpenses returns true or false, based on conditions set... comparing props.items to selected year */}\n  //* and displaying (returning true) the data that matches the state variable   */}\n\n\n  if (showExpenses.length > 0) {\n    console.log('conditional');\n    expensesContent = showExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 60\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: year,\n        onChangeFilter: yearHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"OpYx7CcAgD2adMpd0nBFWwvfmyA=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","useState","Expenses","props","year","changeYear","yearHandler","dataYear","console","log","showExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"sources":["C:/Users/stale/Documents/GitHub/1st React App 2/src/components/Expenses/Expenses.js"],"sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport Card from '../UI/Card';\r\nimport \"./ExpensePrice.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst Expenses = function (props) {\r\n  const [year, changeYear] = useState();\r\n\r\n   const yearHandler = dataYear => {\r\n      changeYear(dataYear);\r\n      console.log(\"datayear \" + dataYear)\r\n      console.log(year + \" JS\")\r\n    };\r\n\r\n    const showExpenses = props.items.filter(expense => {\r\n      console.log(\"hello\")\r\n      return expense.date.getFullYear().toString() === year;\r\n    })\r\n\r\n    const expensesContent = <p>No expenses found</p>;\r\n\r\n        //     {/* map function has array input, prev props.items, now yearFilter */}\r\n        // {/* outputs keyed Component w dynamic data from App.js */}\r\n        // {/* showExpenses returns true or false, based on conditions set... comparing props.items to selected year */}\r\n        //* and displaying (returning true) the data that matches the state variable   */}\r\n        if (showExpenses.length > 0) {\r\n          console.log('conditional')\r\n          expensesContent = showExpenses.map((expense) => (<ExpenseItem \r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date} \r\n          />\r\n        \r\n          ));\r\n        }\r\n    return (\r\n    \r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter selected={year} onChangeFilter={yearHandler} />\r\n        {expensesContent}\r\n        </Card>\r\n        </div>\r\n     );\r\n  }\r\n\r\nexport default Expenses;"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,oBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,QAAQ,GAAG,UAAUC,KAAV,EAAiB;EAAA;;EAChC,MAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBJ,QAAQ,EAAnC;;EAEC,MAAMK,WAAW,GAAGC,QAAQ,IAAI;IAC7BF,UAAU,CAACE,QAAD,CAAV;IACAC,OAAO,CAACC,GAAR,CAAY,cAAcF,QAA1B;IACAC,OAAO,CAACC,GAAR,CAAYL,IAAI,GAAG,KAAnB;EACD,CAJF;;EAMC,MAAMM,YAAY,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;IACjDL,OAAO,CAACC,GAAR,CAAY,OAAZ;IACA,OAAOI,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CZ,IAAjD;EACD,CAHoB,CAArB;;EAKA,MAAMa,eAAe,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAxB,CAd8B,CAgB1B;EACA;EACA;EACA;;;EACA,IAAIP,YAAY,CAACQ,MAAb,GAAsB,CAA1B,EAA6B;IAC3BV,OAAO,CAACC,GAAR,CAAY,aAAZ;IACAQ,eAAe,GAAGP,YAAY,CAACS,GAAb,CAAkBN,OAAD,iBAAc,QAAC,WAAD;MAEjD,KAAK,EAAEA,OAAO,CAACO,KAFkC;MAGjD,MAAM,EAAEP,OAAO,CAACQ,MAHiC;MAIjD,IAAI,EAAER,OAAO,CAACC;IAJmC,GAC5CD,OAAO,CAACS,EADoC;MAAA;MAAA;MAAA;IAAA,QAA/B,CAAlB;EAQD;;EACL,oBAEA;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,EAAC,UAAhB;MAAA,wBACE,QAAC,cAAD;QAAgB,QAAQ,EAAElB,IAA1B;QAAgC,cAAc,EAAEE;MAAhD;QAAA;QAAA;QAAA;MAAA,QADF,EAEGW,eAFH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QAFA;AASD,CAxCH;;GAAMf,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}