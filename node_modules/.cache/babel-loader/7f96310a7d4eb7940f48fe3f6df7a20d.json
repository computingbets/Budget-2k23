{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stale\\\\Documents\\\\GitHub\\\\1st React App 2\\\\src\\\\components\\\\Expenses\\\\ExpensesList.js\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport 'ExpensesList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesList = props => {\n  // map function has array input, prev props.items, now yearFilter\n  // outputs keyed Component w dynamic data from App.js\n  // showExpenses returns true or false, based on conditions set... comparing props.items to selected year\n  // and displaying (returning true) the data that matches the state variable  \n  if (props.expenses.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"expenses-list__fallback\",\n      children: \"Found no expenses.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"expenses-list\",\n    children: props.expenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"names":["ExpenseItem","ExpensesList","props","expenses","length","map","expense","title","amount","date","id"],"sources":["C:/Users/stale/Documents/GitHub/1st React App 2/src/components/Expenses/ExpensesList.js"],"sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport 'ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  // map function has array input, prev props.items, now yearFilter\r\n  // outputs keyed Component w dynamic data from App.js\r\n  // showExpenses returns true or false, based on conditions set... comparing props.items to selected year\r\n  // and displaying (returning true) the data that matches the state variable  \r\n  if (props.expenses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\r\n        }\r\n\r\n\r\n    return( \r\n        <ul className=\"expenses-list\">\r\n        {props.expenses.map((expense) => (\r\n            <ExpenseItem    \r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n        ))}\r\n    </ul>\r\n    );\r\n        };\r\nexport default ExpensesList;\r\n"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAC9B;EACA;EACA;EACA;EACA,IAAIA,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;IAC/B,oBAAO;MAAI,SAAS,EAAC,yBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACK;;EAGL,oBACI;IAAI,SAAS,EAAC,eAAd;IAAA,UACCF,KAAK,CAACC,QAAN,CAAeE,GAAf,CAAoBC,OAAD,iBAChB,QAAC,WAAD;MAEJ,KAAK,EAAEA,OAAO,CAACC,KAFX;MAGJ,MAAM,EAAED,OAAO,CAACE,MAHZ;MAIJ,IAAI,EAAEF,OAAO,CAACG;IAJV,GACCH,OAAO,CAACI,EADT;MAAA;MAAA;MAAA;IAAA,QADH;EADD;IAAA;IAAA;IAAA;EAAA,QADJ;AAYK,CAtBT;;KAAMT,Y;AAuBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}